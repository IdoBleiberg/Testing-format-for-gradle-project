apply plugin: 'edu.wpi.first.GradleRIO'

def ROBOT_MAIN_CLASS = 'com.team3316.robot.RobotEntry'

deploy {
    targets {
        roboRIO('roborio') {
            team = frc.getTeamNumber()
        }
    }

    artifacts {
        frcJavaArtifact('frcJava') {
            targets << 'roborio'
            debug = frc.getDebugOrDefault(false)
        }

        fileTreeArtifact('frcStaticFileDeploy') {
            files = fileTree(dir: 'src/main/deploy')
            targets << 'roborio'
            directory = '/home/lvuser/deploy'
        }
    }
}

def includeDesktopSupport = true
/*
bootJar {
    baseName = 'gs-spring-boot'
    version =  '0.1.0'
}
*/
dependencies {
    compile wpi.deps.wpilib()
    compile wpi.deps.vendor.java()
    nativeZip wpi.deps.vendor.jni(wpi.platforms.roborio)
    nativeDesktopZip wpi.deps.vendor.jni(wpi.platforms.desktop)

    compile 'com.github.team3316:dbug-kit:0.0.6-beta'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter'
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.2.0')
    testCompile('org.junit.jupiter:junit-jupiter-params:5.2.0')
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.2.0')
    //testCompile "org.mockito:mockito-core:2.+"
    //testCompile('org.mockito:mockito-junit-jupiter:2.18.3')
    implementation 'org.springframework.boot:spring-boot-starter'
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

jar {
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    manifest edu.wpi.first.gradlerio.GradleRIOPlugin.javaManifest(ROBOT_MAIN_CLASS)
}

test {
    useJUnitPlatform()
}